<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>cz.cestadomu.hospis</groupId>
		<artifactId>rest</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>rest-lib</artifactId>
	<name>Hospis REST API library</name>
	<description>Module that serves in Hospis project as a thin layer for translation between public REST API and core module.</description>
	<url>https://github.com/calaveraInfo/hospis</url>

	<scm>
		<url>https://github.com/calaveraInfo/hospis/tree/master/rest/lib</url>
	</scm>

	<dependencies>
		<!--
			Contains Spring security dependencies.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!--
			Contains object to xml conversion libraries.
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>

		<!--
			Contains web related dependencies like @RestController, @RequestMapping etc.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--
			Contains integration related dependencies like @IntegrationComponentScan, @MessagingGateway etc.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-integration</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-java-dsl</artifactId>
		</dependency>

		<!--
			JMS related dependencies
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jms</artifactId>
		</dependency>

		<!--
			ActiveMQ related dependencies
		-->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-spring</artifactId>
		</dependency>
		
		<!--
			http://docs.spring.io/spring-boot/docs/1.2.3.RELEASE/reference/htmlsingle/
			74.1 Create a deployable war file
			...
			The final step in the process is to ensure that the embedded servlet container doesnâ€™t
			interfere with the servlet container to which the war file will be deployed. To do so, you
			need to mark the embedded servlet container dependency as provided.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--
			Contains test related dependencies like @RunWith, @WebAppConfiguration etc.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>cz.cestadomu.hospis</groupId>
			<artifactId>core-mock</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>cz.cestadomu.hospis</groupId>
			<artifactId>core-model</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
