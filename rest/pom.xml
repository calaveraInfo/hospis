<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cz.cestadomu.hospis.rest</groupId>
	<artifactId>hospis-rest-webapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Hospis rest API</name>
	<description>Thin layer for translation between REST API and messaging platform</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>cz.cestadomu.hospis.rest.HospisRestApiApplication</start-class>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- 
		Contains web related dependencies like @RestController, @RequestMapping etc.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- 
		Contains integration related dependencies like @IntegrationComponentScan, @MessagingGateway etc.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-integration</artifactId>
		</dependency>
		
		<!-- 
		JMS related dependencies
		 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jms</artifactId>
		</dependency>
		
		<!-- 
		ActiveMQ related dependencies
		 -->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.activemq</groupId>
		    <artifactId>activemq-spring</artifactId>
		    <version>5.10.1</version>
		</dependency>
		
		<!-- 
		Contains test related dependencies like @RunWith, @WebAppConfiguration etc.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- 
		http://docs.spring.io/spring-boot/docs/1.2.3.RELEASE/reference/htmlsingle/
		74.1 Create a deployable war file
		...
		The final step in the process is to ensure that the embedded servlet container doesnâ€™t
		interfere with the servlet container to which the war file will be deployed. To do so, you
		need to mark the embedded servlet container dependency as provided.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
