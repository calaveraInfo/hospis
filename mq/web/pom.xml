<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>mq-web</artifactId>
	<packaging>war</packaging>

	<name>Hospis embedded broker web</name>

	<parent>
		<groupId>cz.cestadomu.hospis</groupId>
		<artifactId>mq</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>cz.cestadomu.hospis</groupId>
			<artifactId>mq-lib</artifactId>
		</dependency>
	
		<!-- 
		Contains web related dependencies like @RestController, @RequestMapping etc.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- 
		Contains test related dependencies like @RunWith, @WebAppConfiguration etc.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 
		http://docs.spring.io/spring-boot/docs/1.2.3.RELEASE/reference/htmlsingle/
		74.1 Create a deployable war file
		...
		The final step in the process is to ensure that the embedded servlet container doesnâ€™t
		interfere with the servlet container to which the war file will be deployed. To do so, you
		need to mark the embedded servlet container dependency as provided.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

</project>
